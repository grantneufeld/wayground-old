require 'iconv'

# Tags can be attached to any other model.
# They are used as a form of categorization and grouping, ‘folksonomy’.
# Normally, tags are entered as words or phrases.
# All punctuation and spacing is ignored, with one exception:
#  [service]:[class]=[value]
# This form of tag is used to define programatically structured information.
# For example, “upcoming:event=123” Defines a relationship to the event with id 123 on the upcoming service.
class Tag < ActiveRecord::Base
	attr_accessible :item_id, :item_type, :title
	
	validates_presence_of :item
	validates_presence_of :user
	validates_presence_of :title
	validates_presence_of :tag
	validates_format_of :tag, :with=>/\A([a-z0-9]+)(:[a-z0-9]+)?(=[a-z0-9]+)?\z/
	validates_uniqueness_of :tag, :scope=>[:item_type, :item_id]
	
	belongs_to :item, :polymorphic=>true
	belongs_to :user
	
	def title=(t)
		write_attribute('title', t)
		# tag is generated by transliterating utf-8 characters to ascii,
		# converting letters to lower-case,
		# and stripping everything except letters, numbers, colons and equals
		tag = Iconv.iconv('ASCII//TRANSLIT', 'UTF-8', t).to_s.downcase.gsub(/[^a-z0-9:=]+/, '')
		write_attribute('tag', tag)
	end
end
