# This is an in-progress rethinking of the content model.
# It does NOT necessarily match the current content model directly.


ITEMS

There are models that are the primary content “items” that get displayed. These include: Page, Document, Image, Event and Container (future items might include Weblink, Video, BlogPost, Listing, Resource,…).


COMMON ATTRIBUTES

Most of the item models have most of these attributes:
user (owner)
editor (last user to edit)
subpath (used to auto-generate path.sitepath)
title
description
keywords
timestamps


ITEM ATTRIBUTE MODELS

There are models for attributes that almost any of the items can have:

Access
Security/privilege restriction/override for specific Users to access items.
- item:belongs_to: The item the Access applies to.
- user:belongs_to: The User who has the Access.
- access: admin, edit, contribute, comment, view, block,...
- start_at, end_at: [optional] The period during which the Access applies.

(Category dropped - will just rely on Tags.)

Comment
A (optionally) titled comment on an item by a User.
- item:belongs_to: The item the comment applies to.
- user:belongs_to: The User who made the comment.
- title: [optional]
- content: (always text/plain)

Path
Used to determine custom urls for the item.
- item:belongs_to: The item the Path links to.
- sitepath: The root-relative url defining the Path.
- redirect: [optional] The url to redirect to when accessing this Path.

Rating
User numeric ratings (with optional comments) for items.
- item:belongs_to: The item the Rating is for.
- user:belongs_to: The User who gave the Rating.
- value: The numeric Rating value.
- comment: [optional] A comment made by the user to go with the rating.

Tag
Used for Users to add tags/keywords to items. “Folksonomy”.
- item:belongs_to: The item the Tag applies to.
- user:belongs_to: The User who added the Tag.
- tag: Short alphanumeric string (no punctuation or spaces, all lower-case) defining the tag.
- title: Textual representation of the tag.
E.g., a user might add the tag “Example Tag” (which would be the title) and generates the tag “exampletag”.

Weblink
Mostly linked to Events and democracy items (generally not relevant for other items).
- item:belongs_to: [optional] The item the Weblink applies to.
- user:belongs_to: The User who added the Weblink.
- is_confirmed:boolean: urls submitted by regular Users need to be confirmed by a moderator/admin.
- position
- category: [optional]
- title: [optional]
- site: abbreviation of website domain name for the link, primarily used for css rendering of the link with a site-specific icon.
- url
- description: [optional]


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

CONTENT DISPLAY


Page
A container for the display of arbitrary content.
- owner:belongs_to: User.
- editor:belongs_to: User who last edited the Page.
- parent
- subpath
- title
- description
- content_type
- content


CHUNKS

Chunks are not part of the data storage — the data is stored using extended markup in the Page.content. (e.g., <wg:chunk …> <wg:sidebar …> etc.)

Page objects can have multiple Chunks that make up part or all of the Page’s content. Chunks are contained in blocks of the Page’s layout (content, column1, column2, sidebar).

Chunk
An abstract class. The common attributes are:
- page: the page this is a ‘chunk’ of.
- block: The part of the page content this chunk goes in (e.g, ‘’ default, ‘sidebar’, ‘column1’, etc.).
- position: The numeric ordering of the chunk relative to other chunks in the same block.
- flavour: Special attributes of the chunk (e.g., ‘feature’, ‘video’, etc.). Typically used to set the class (for CSS) of the chunk’s wrapper.

RawChunk
Displays simple content.
- content
- content_type

ItemChunk
Displays an item.
- item:belongs_to: any Object that is displayable.
- template:belongs_to: [optional] the Template to use for formatting the display of the linked item’s values.

ListChunk
Displays a list of items.
- item_type: the type of Object to show.
- parent_id: [optional] show only items belonging to the parent item.
- user_id: [optional] show only items belonging to the user.
- before_date, after_date: [optional] show only items applicable to the date range (for events, active during those dates; for other types, created during those dates)
- tag: [optional] show only items having the tag. (maybe allow comma separated list of tags to match?)
- key: [optional] show only items matching the search key.
- max: [optional] show up to the max number of items. Uses a default limit amount if max is not set.
- paginate:boolean: show pagination links if this is true and there are more than max/default-limit items.
- template:belongs_to: [optional] the Template to use for formatting the display of the shown items’.


TEMPLATES

Template
A Template specifies formatting options for the values of objects of a given item model.
- item_type
- display_type: Page, Chunk or ListChunk
- content_type
- content
- code: The content processed into erb code

Layout
Layouts are kind of like Templates, except for the whole html result. They define the overall page layout.

Site
If multiple websites are being managed from one Wayground instance/database, a Site object is used to configure the settings for a given website, and to link items that are to be shown on that website.
(see config/config.yml for probable attributes for this model)


WIKI

WikiEdit
Page objects may have WikiEdits which track user edits of the Page.
- page:belongs_to
- editor:belongs_to: User who made the edit.
- comment: A short comment describing the edit.
These are the fields recorded for WikiEdits
- title
- description
- content_type
- content


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

CALENDAR, SCHEDULING


EVENTS

An Event can have one or more Schedules.

A Schedule specifies the date & time range, and optional recurrence (repeating events). Each Schedule has one Location. A short description can be included with each Schedule — potentially useful if an Event has more than one Schedule.

An Rsvp defines a relationship between a User and an Event (i.e., confirmed, maybe, not attending, invited).


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

DEMOCRACY / POLITICS


There are a number of items specifically for information about governments, elections, candidates, parties, etc.

Level
The level of government (e.g., federal/national, provincial/state, municipal, etc.). Users will generally not interact with Level objects directly — they act mainly as a sort of container for other political objects.

Office
A given elected position (e.g., federal Senator for Alberta, Mayor of Calgary, trustee for the Calgary Public School Board, …).

Election
An election for one or more Offices at a given Level of government.

Party
A political party, a grouping of candidate campaigns.

Candidate
A person who runs in one or more elections.

Campaign
A specific Election campaign for a specific Office by a given Candidate, often for a political Party.

Most of the item attribute models apply to the above models (except Level which has few attributes).

There are some other models I haven’t explored in detail: Petition (with PetitionSignature), Policy and Vote (with UserVote).


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

MESSAGING


Forums contain Topics which can have multiple Replies.

There are different types of Messages that can be sent to/from users. In addition to web-based messages, there can also be emails and phone messages (for a PhoneLog).


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

USERS, GROUPS, CONTACTS

The User model contains the basic info needed for the user’s interaction with the website.

The Contact model contains information about a person (address, phone, email, etc.).

A Contact record can be linked to a single User. A User may have multiple Contact records associated with them.


MEMBERSHIPS

The Group model is linked to multiple Users and Contacts through the Membership model.

The Membership defines the User’s access permissions for the Group: blocked, request (User initiated request to join non-public Group), invited, member, moderator, staff, admin. Permissions for specific actions can also be individually set (add events, invite new members, moderate forums/messages, manage members, …)

Users can be invited. Memberships can have an expiry date. Users can be blocked from a Group. Users can have a title for the Group (e.g., “Treasurer”, “Events Coordinator”, etc.).

A specific Location for the User can be associated with the Membership. This is used for contacting them, Group phone list, Group mailing list, and their Group profile (if they make the info public).
